<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-10-18T23:42:22+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">loop-unroller</title><author><name>Victor Bieszka</name><email>victorbieszka@gmail.com</email></author><entry><title type="html">Work-In-Progress</title><link href="http://localhost:4000/posts/2023/10/01/coming-soon.html" rel="alternate" type="text/html" title="Work-In-Progress" /><published>2023-10-01T00:00:00+02:00</published><updated>2023-10-01T00:00:00+02:00</updated><id>http://localhost:4000/posts/2023/10/01/coming-soon</id><content type="html" xml:base="http://localhost:4000/posts/2023/10/01/coming-soon.html">&lt;h2 id=&quot;welcome&quot;&gt;Welcome&lt;/h2&gt;

&lt;p&gt;First of all, thank you for visiting my website. As you might have seen, it’s quite barren here and I’d like to apologize for that. 
As I’m currently compiling all my projects, research, tidbits, etc., this website is still in a work-in-progress state.
Stay tuned for more :)
&lt;!-------------------------------- FOOTER ----------------------------&gt;&lt;/p&gt;</content><author><name>Victor Bieszka</name><email>victorbieszka@gmail.com</email></author><category term="posts" /><summary type="html">Welcome to my website! And sorry for the work-in-progress.</summary></entry><entry><title type="html">Embedding Wasmtime in C++</title><link href="http://localhost:4000/posts/2023/07/04/wasmtime-cpp.html" rel="alternate" type="text/html" title="Embedding Wasmtime in C++" /><published>2023-07-04T00:00:00+02:00</published><updated>2023-07-04T00:00:00+02:00</updated><id>http://localhost:4000/posts/2023/07/04/wasmtime-cpp</id><content type="html" xml:base="http://localhost:4000/posts/2023/07/04/wasmtime-cpp.html">&lt;p&gt;I think by now we all can agree, that WebAssembly is an exciting technology&lt;/p&gt;

&lt;h1 id=&quot;webassembly-and-c&quot;&gt;WebAssembly and C++&lt;/h1&gt;

&lt;p&gt;If you’re interested in executing WebAssembly in your C++ project,
you have plenty of sound options to do do. Most notably, &lt;a href=&quot;https://wasmer.io/&quot;&gt;Wasmer&lt;/a&gt;, 
&lt;a href=&quot;https://github.com/bytecodealliance/wasm-micro-runtime&quot;&gt;WAMR&lt;/a&gt;, &lt;a href=&quot;https://wasmtime.dev/&quot;&gt;Wasmtime&lt;/a&gt;, just to name a few.
Now, let’s have a look at Wasmtime, my go-to standalone WebAssembly engine. You might ask: Why Wasmtime?&lt;/p&gt;

&lt;p&gt;Well, I had a great experience using it for my Master’s thesis, it’s easy to use and achieves excellent performance.
The reason why I’m writing this post is the unfortunate lack of documentation on how to embed Wasmtime in C++.
So, without further ado, let us have a look how you can do it!&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;</content><author><name>Victor Bieszka</name><email>victorbieszka@gmail.com</email></author><category term="posts" /><summary type="html">A little guide on how to embed Wasmtime in your C++ project.</summary></entry></feed>